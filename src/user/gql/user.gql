# --------------------- Types --------------------#

type User {
  id: ID!
  teamId: String
  name: String!
  email: String
  contactNumber: String
  media: [UserMedia]
  averageRating: Int
  preferences: Preferences
}

enum MediaType {
  AVATAR
  COVER
  GALLERY
  VIDEO
}

type UserMedia {
  id: ID!
  userId: ID!
  url: String!
  type: MediaType!
  alt: String
  createdAt: Date
}

# --------------------- Inputs --------------------#

input CreateUserInput {
  name: String!
  teamId: String
  email: String
  contactNumber: String
}

input CheckUserExistsInput {
  name: String
  email: String
}

input UpdateUserInput {
  id: ID!
  teamId: String
  name: String!
  email: String
  contactNumber: String
  preferences: CreatePreferencesInput
}

# --------------------- Responses --------------------#

type CreateUserResponse {
  status: ResponseStatus
  data: User
}

type UpdateUserResponse {
  status: ResponseStatus
  data: User
}

# --------------------- Queries --------------------#

type Query {
  login(email: String): User
  getUserById(userId: ID): User
  getAllUsers: [User]
}

# --------------------- Mutations --------------------#

type Mutation {
  createUser(input: CreateUserInput!): CreateUserResponse!
  updateUser(input: UpdateUserInput): UpdateUserResponse
}
